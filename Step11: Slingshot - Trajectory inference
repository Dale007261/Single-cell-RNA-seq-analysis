library(slingshot)
library(SingleCellExperiment)

#filter genes down to potential cell-type markers
geneFilter <- apply(assays(PH)$counts,1,function(x){
  sum(x >= 3) >= 10
})
PH <- PH[geneFilter, ]

#Normalization
FQnorm <- function(counts){
  rk <- apply(counts,2,rank,ties.method='min')
  counts.sort <- apply(counts,2,sort)
  refdist <- apply(counts.sort,1,median)
  norm <- apply(rk,2,function(r){ refdist[r] })
  rownames(norm) <- rownames(counts)
  return(norm)
}

assays(PH)$norm <- FQnorm(assays(PH)$counts)

library(uwot)
# Perform UMAP dimensional reduction
rd2 <- umap(t(log1p(assays(PH)$norm)))
colnames(rd2) <- c('UMAP1', 'UMAP2')
head(rd2)
plot(rd2, col = rgb(0,0,0,.5), pch=16, asp = 1)

reducedDims(PH) <- PHpleList(PCA = rd1, UMAP = rd2)

library(RColorBrewer)
plot(rd1, col = brewer.pal(5,"Set1")[celltype], pch=16, asp = 1)


##slingshot analysis
PH <- slingshot(PH, clusterLabels = 'GMM', reducedDim = 'PCA')

summary(PH$slingPseudotime_1)

colors <- colorRampPalette(brewer.pal(11,'Spectral')[-6])(100)
plotcol <- colors[cut(PH$slingPseudotime_1, breaks=100)]

plot(reducedDims(PH)$PCA, col = plotcol, pch=16, asp = 1)
lines(SlingshotDataSet(PH), lwd=2, col='black')

plot(reducedDims(PH)$PCA, col = brewer.pal(9,'Set1')[PH$GMM], pch=16, asp = 1)
lines(SlingshotDataSet(PH), lwd=2, type = 'lineages', col = 'black')

#find the genes
library(tradeSeq)

# fit negative binomial GAM
PH <- fitGAM(PH)

# test for dynamic expression
ATres <- associationTest(PH)

topgenes <- rownames(ATres[order(ATres$pvalue), ])[1:250]
pst.ord <- order(PH$slingPseudotime_1, na.last = NA)
heatdata <- assays(PH)$counts[topgenes, pst.ord]
heatclus <- PH$GMM[pst.ord]

heatmap(log1p(heatdata), Colv = NA,
        ColSideColors = brewer.pal(9,"Set1")[heatclus])
